%{
#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include "diff_tree.h"

extern int yylex(void);
%}


%union {
  String *string;
  int integer;

  SLLBuilder_Patch    *patches;
  Patch               *patch;
  PatchHeader         *patchHeader;
  SLLBuilder_Hunk     *hunks;
  FileDiffHeader      *fileDiffHeader;
  GitHeader           *gitHeader;
  Hunk                *hunk;
  HunkHeader          *hunkHeader;
  SLLBuilder_Diff     *diffs;
  Diff                *diff;
  SLLBuilder_Element  *elements;
  Element             *element;
}


%token GIT_HEADER
%token GIT_INDEX

%token<string> PATH
%token<string> HASH
%token<integer> FILE_MODE

%token<integer> POSITION

%token HUNK_HEADER
%token REMOVAL_OPEN
%token REMOVAL_CLOSE
%token ADDITION_OPEN
%token ADDITION_CLOSE
%token<integer> '\n'
%token<integer> ' '
%token<integer> '\b'
%token<integer> '\f'
%token<integer> '\r'
%token<integer> '\t'
%token<integer> '\t'
%token<string> WORD

%type<patches> patches
%type<patch> patch
%type<patchHeader> patchHeader
%type<hunks> hunks
%type<fileDiffHeader> fileDiffHeader
%type<gitHeader> gitHeader
%type<hunk> hunk
%type<hunkHeader> hunkHeader
%type<diffs> diffs
%type<diff> diff
%type<elements> elements
%type<element> element

%%
